cc_binary(
    name = "lemon",
    srcs = ["tool/lemon.c"],
)

COMPILER_OPTS = [
    "-DNDEBUG=1",
    "-DHAVE_FDATASYNC=1",
]

genrule(
    name = "generate_parse_source",
    tools = [
        ":lemon",
        "addopcodes.awk",
    ],
    outs = ["parse.c", "parse.h"],
    srcs = [
        "src/parse.y",
        "src/lempar.c",
    ],
    cmd = ("TMPDIR=$$(mktemp -d) && mkdir -p $(@D)/src &&" +
        "cp $(location :lemon) $(location :src/lempar.c) " +
        "$(location :src/parse.y) $$TMPDIR/ &&" +
        "(cd $$TMPDIR && ./lemon parse.y) && " +
        "cp $$TMPDIR/parse.c $(location :parse.c) &&" +
        "awk -f $(location :addopcodes.awk) $$TMPDIR/parse.h " +
        "> $(location :parse.h) &&" +
        "rm -rf $$TMPDIR"
    )
)

genrule(
    name = "generate_sqlite3.h",
    tools = ["tool/mksqlite3h.tcl"],
    srcs = [
        "src/sqlite.h.in",
        "manifest.uuid",
        "VERSION",
        "ext/rtree/sqlite3rtree.h",
    ],
    outs = ["src/sqlite3.h"],
    cmd = ("tclsh $(location :tool/mksqlite3h.tcl) $$(dirname $(location :VERSION)) " +
        "> $(location :src/sqlite3.h)"),
)

cc_binary(
    name = "mkkeywordhash",
    srcs = ["tool/mkkeywordhash.c"],
)
    
genrule(
    name = "generate_keywordhash.h",
    tools = [":mkkeywordhash"],
    outs = ["src/keywordhash.h"],
    cmd = "$(location :mkkeywordhash) > $(location :src/keywordhash.h)",
)

genrule(
    name = "generate_opcodes_source",
    tools = [
        "mkopcodeh.awk",
        "mkopcodec.awk",
    ],
    outs = [
        "src/opcodes.c",
        "src/opcodes.h",
    ],
    srcs = [
        "parse.h",
        "src/vdbe.c",
    ],
    cmd = "cat $(location parse.h) " +
      "$(location src/vdbe.c) " +
      "| awk -f $(location mkopcodeh.awk) " +
      "> $(location src/opcodes.h) && "  +
      "awk -f $(location mkopcodec.awk) " +
      "$(location src/opcodes.h) "  +
      "> $(location src/opcodes.c)"
)

cc_library(
    name = "sqlite3",
    hdrs = ["src/sqlite3.h"],
    srcs = glob(
        ["**/*.c", "**/*.h"],
        #["src/*.h", "src/*.c, ext/**/*.c", "ext/**/*.h"],
        exclude = [
            "autoconf/**",
            "ext/fts1/**",
            "ext/fts2/**",
            "ext/fts5/**",
            "ext/rbu/**",
            "ext/misc/**",
            "src/lempar.c",
            "src/tclsqlite.c",
            "src/sqlite3ext.h",
            "src/shell.*",
            "**/*test*.c",
            "test/**",
            "**/tool/**",
        ]) + [
        "src/keywordhash.h",
        "src/sqlite3.h",
        "parse.c",
        "parse.h",
        "src/opcodes.c",
        "src/opcodes.h"],
    includes = [".", "src"],
    copts = ["-DSQLITE_CORE"] + COMPILER_OPTS,
)
